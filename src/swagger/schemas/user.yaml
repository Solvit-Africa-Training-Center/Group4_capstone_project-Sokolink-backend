components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique user identifier
        name:
          type: string
          description: User's full name
        email:
          type: string
          format: email
          description: User's email address
        businessName:
          type: string
          description: Business name of the user
        phoneNumber:
          type: string
          description: Phone number of the user
        roleId:
          type: string
          format: uuid
          description: User's role identifier
        createdAt:
          type: string
          format: date-time
          description: Account creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
      example:
        id: '123e4567-e89b-12d3-a456-426614174000'
        name: 'John Doe'
        email: 'john.doe@example.com'
        businessName: 'Tech World Ltd'
        phoneNumber: '250788123456'
        roleId: '456e7890-e89b-12d3-a456-426614174111'
        createdAt: '2024-01-15T10:30:00Z'
        updatedAt: '2024-01-15T10:30:00Z'

    Role:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          enum: [admin, customer, wholesaler, retailer]
        description:
          type: string
      example:
        id: '456e7890-e89b-12d3-a456-426614174111'
        name: 'customer'
        description: 'Regular shopper with access to browse and purchase'

    CreateUser:
      type: object
      required:
        - name
        - email
        - password
        - roleName
        - businessName
        - phoneNumber
      properties:
        name:
          type: string
          minLength: 1
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        roleName:
          type: string
          enum: [Retailer, Wholeseller, Customer]
        businessName:
          type: string
        phoneNumber:
          type: string
          pattern: '^[0-9]{10,15}$'
      example:
        name: 'Jane Smith'
        email: 'jane.smith@example.com'
        password: 'securePassword123'
        roleName: 'Retailer'
        businessName: 'Smart Retail Ltd'
        phoneNumber: '250784567890'

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      example:
        email: 'john.doe@example.com'
        password: 'securePassword123'

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT authentication token
      example:
        token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'

    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          oneOf:
            - type: object
            - type: array
            - type: 'null'
      example:
        success: true
        message: 'Operation successful'
        data: {}

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
        data:
          type: object
          nullable: true